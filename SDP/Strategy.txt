// Strategy interface
interface PaymentStrategy {
    boolean pay(double amount);
}

// Concrete strategies
class CreditCardPaymentStrategy implements PaymentStrategy {
    private String cardNumber;
    private String expiryDate;
    private String cvv;

    public CreditCardPaymentStrategy(String cardNumber, String expiryDate, String cvv) {
        this.cardNumber = cardNumber;
        this.expiryDate = expiryDate;
        this.cvv = cvv;
    }

    @Override
    public boolean pay(double amount) {
        // Implement credit card payment logic
        System.out.println("Processing credit card payment of $" + amount);
        // Simulate payment success
        return true;
    }
}

class PayPalPaymentStrategy implements PaymentStrategy {
    private String email;
    private String password;

    public PayPalPaymentStrategy(String email, String password) {
        this.email = email;
        this.password = password;
    }

    @Override
    public boolean pay(double amount) {
        // Implement PayPal payment logic
        System.out.println("Processing PayPal payment of $" + amount);
        // Simulate payment success
        return true;
    }
}

// Context class
class PaymentProcessor {
    private PaymentStrategy paymentStrategy;

    public PaymentProcessor(PaymentStrategy paymentStrategy) {
        this.paymentStrategy = paymentStrategy;
    }

    public void processPayment(double amount) {
        if (paymentStrategy.pay(amount)) {
            System.out.println("Payment successful!");
        } else {
            System.out.println("Payment failed.");
        }
    }
}

// Client code
public class Main {
    public static void main(String[] args) {
        PaymentProcessor creditCardProcessor = new PaymentProcessor(new CreditCardPaymentStrategy("1234 5678 9012 3456", "12/25", "123"));
        creditCardProcessor.processPayment(100.50);

        PaymentProcessor paypalProcessor = new PaymentProcessor(new PayPalPaymentStrategy("user@example.com", "password"));
        paypalProcessor.processPayment(75.25);
    }
}